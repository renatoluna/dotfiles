[user]
	name = Renato Lopes de Luna Freire
	email = renatoluna@gmail.com
[pull]
    default = upstream
[push]
    default = upstream
[url "https://"]
    insteadOf = git://
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto
    ui = auto
[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix
[core]
    whitespace = space-before-tab,indent-with-non-tab,trailing-space
    ui = auto
[alias]
    amend = commit --amend
    ammend = amend
    undopush = push -f origin HEAD^:master
    unchanged = git update-index --assume-unchanged
    st = status
    co = checkout
    br = branch
    df = diff
    dfs = diff --stat
    ci = commit
    changed = show --pretty="format:" --name-only
    lg = log --graph  --pretty=format:'%C(bold red)%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset' --abbrev-commit --date=relative
    lga = log --graph --decorate --pretty=oneline --abbrev-commit --all
    last = log -1 HEAD
    la = "!git config -l | grep alias | cut -c 7-"
    ours = "!f() { git co --ours $@ && git add $@; }; f"
    theirs = "!f() { git co --theirs $@ && git add $@; }; f"
    update = "!f() { BRANCH=$(git rev-parse --abbrev-ref HEAD); git st && git pull origin $BRANCH && git push origin $BRANCH; }; f"
    # see what's new
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    # Delete all local branches merged into master
    purge = !"git branch -d $(git branch --merged master | grep -v -e '*' -e 'master')"
    change = "!f() { INITAL='[';BRANCH=$(git rev-parse --abbrev-ref HEAD);FINAL='] ';JIRA_TITLE=$(curl -G -s -k -u %USER%:%PASSWORD%@ https://jira.intranet.uol.com.br/jira/rest/api/latest/issue/$BRANCH.json | awk -Fsummary'\":\"' {'print $2'} | awk -F'\",' {'print $1'});SPACER=' : ';USER_MESSAGE=$1;MESSAGE=$INITAL$BRANCH$FINAL$JIRA_TITLE$SPACER$USER_MESSAGE; echo \"$MESSAGE\"; }; f"
    recoverFile = "!f() { FILEPATH=$1;COMMITSHA=$(git rev-list -n 1 HEAD -- $FILEPATH);git checkout $COMMITSHA~1 $FILEPATH; }; f"
[credential]
    helper = osxkeychain
[http]
    sslVerify = false
